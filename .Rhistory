setwd(dirname(getActiveDocumentContext()$path))
devtools::document()
setwd(dirname(rstudio::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
devtools::document()
setwd("C:/Users/asheimer/files/Jottacloud/github/eiriktools")
#' @export
duplicates_cut_adv = function(df, lim_coeff=15)
{
require(glue)
duplicates = df %>% duplicates_find(by="pit")
for (dupl in duplicates){
print(glue("Pit: {dupl}"))
weights = df[df$pit==dupl,]["weight"] %>% na_removeRow("weight")
print(glue("Weights {paste(weights, collapse='  ')}"))
tanks   = df[df$pit==dupl,]["tank"]   %>% na_removeRow("tank")
print(glue("Tanks: {paste(tanks, collapse='  ')}"))
mords=df[df$pit==dupl,]["measOrder"] %>% na_removeRow("measOrder")
print(glue("Mords: {paste(mords, collapse='  ')}"))
coeff = sd(weights) / mean(weights) * 100
if (is.na(coeff)) next
if (length(unique(tanks))==1 & coeff < 15)
{
# delete all entries from the dataset except the first
mords_delete = mords[2:length(mords)]
print(glue("Deleted {paste(mords_delete,collapse=', ')} in tank {unique(tanks)}"))
df = df %>% filter(!measOrder %in% mords_delete)
}
}
return(df)
}
setwd("C:/Users/asheimer/files/Jottacloud/github/eiriktools")
devtools::document()
devtools::document()
devtools::document()
#' @export
duplicates_cut_adv = function(df, lim_coeff=15)
{
require(glue)
duplicates = df %>% duplicates_find(by="pit")
for (dupl in duplicates){
print(glue::glue("Pit: {dupl}"))
weights = df[df$pit==dupl,]["weight"] %>% na_removeRow("weight")
print(glue::glue("Weights {paste(weights, collapse='  ')}"))
tanks   = df[df$pit==dupl,]["tank"]   %>% na_removeRow("tank")
print(glue::glue("Tanks: {paste(tanks, collapse='  ')}"))
mords=df[df$pit==dupl,]["measOrder"] %>% na_removeRow("measOrder")
print(glue::glue("Mords: {paste(mords, collapse='  ')}"))
coeff = sd(weights) / mean(weights,na.rm=T) * 100
if (is.na(coeff)) next
if (length(unique(tanks))==1 & coeff < 15)
{
# delete all entries from the dataset except the first
mords_delete = mords[2:length(mords)]
print(glue::glue("Deleted {paste(mords_delete,collapse=', ')} in tank {unique(tanks)}"))
df = df %>% filter(!measOrder %in% mords_delete)
}
}
return(df)
}
duplicates_cut_adv = function(df, lim_coeff=15)
{
require(glue)
duplicates = df %>% duplicates_find(by="pit")
for (dupl in duplicates){
print(glue::glue("Pit: {dupl}"))
weights = df[df$pit==dupl,]["weight"] %>% na_removeRow("weight")
print(glue::glue("Weights {paste(weights, collapse='  ')}"))
tanks   = df[df$pit==dupl,]["tank"]   %>% na_removeRow("tank")
print(glue::glue("Tanks: {paste(tanks, collapse='  ')}"))
mords=df[df$pit==dupl,]["measOrder"] %>% na_removeRow("measOrder")
print(glue::glue("Mords: {paste(mords, collapse='  ')}"))
coeff = sd(weights) / mean(weights,na.rm=T) * 100
if (is.na(coeff)) next
if (length(unique(tanks))==1 & coeff < 15)
{
# delete all entries from the dataset except the first
mords_delete = mords[2:length(mords)]
print(glue::glue("Deleted {paste(mords_delete,collapse=', ')} in tank {unique(tanks)}"))
df = df %>% filter(!measOrder %in% mords_delete)
}
}
return(df)
}
setwd("C:/Users/asheimer/files/Jottacloud/github/eiriktools")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
setwd("C:/Users/asheimer/files/Jottacloud/github/eiriktools")
devtools::document()
setwd("C:/Users/asheimer/files/Jottacloud/github/eiriktools")
devtools::document()
r::version()
?version
R.version()
R.version
version(rstan)
Version(Rstan)
setwd("C:/Users/asheimer/files/Jottacloud/github/eiriktools")
devtools::document()
a <- tb_fish %>% eiriktools::duplicates_find(by="pit")
1 %in% c(1,2)
1 %in% c(1,2,3)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
devtools::document()
weights = c(980,1000)
coeff = sd(weights) / mean(weights,na.rm=T) * 100
coeff
weights = c(500,1000)
coeff = sd(weights) / mean(weights,na.rm=T) * 100
coeff
#' @export
duplicates_cut_adv = function(df, lim_coeff=15, silent=F)
{
require(glue)
.message <- function(msg){
if(silent==F) message(glue::glue(msg))
}
duplicates = df %>% duplicates_find(by="pit")
for (dupl in duplicates){
.message("")
.message("Pit: {dupl}")
weights = df[df$pit==dupl,]["weight"] %>% na_removeRow("weight")
.message("Weights {paste(weights, collapse='  ')}")
tanks   = df[df$pit==dupl,]["tank"]   %>% na_removeRow("tank")
.message("Tanks: {paste(tanks, collapse='  ')}")
mords=df[df$pit==dupl,]["measOrder"] %>% na_removeRow("measOrder")
.message("MeasOrd.: {paste(mords, collapse='  ')}")
coeff = sd(weights) / mean(weights,na.rm=T) * 100
.message("Coefficient of var for weight is {coeff}")
if (is.na(coeff)) {
next()
.message("Do nothing")
}
if ("" %in% dupl |"missing" %in% dupl | "no pit" %in% dupl) {
next()
.message("Do nothing")
}
if (length(unique(tanks))==1 & coeff < 15)
{
# delete all entries from the dataset except the first
mords_delete = mords[2:length(mords)]
.message("Deleted {paste(mords_delete,collapse=', ')} in tank {unique(tanks)}")
df = df %>% filter(!measOrder %in% mords_delete)
} else {
.message("Do nothing")
}
}
return(df)
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
devtools::document()
